{
    "analytics": [
        {
            "displayName": "Mass secret retrieval from Azure Key Vault",
            "severity": "Low",
            "enabled": "true",
            "query": "\nlet starttime =1d;\nlet endtime = 1h;\nlet AlertTriggerThreshold = 25;\nlet OperationList = dynamic(\n[\"SecretGet\", \"KeyGet\", \"VaultGet\"]);\nAzureDiagnostics\n| where TimeGenerated between (ago(starttime)..ago(endtime))\n| extend ResultType = columnifexists(\"ResultType\", \"None\"), identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g = columnifexists(\"identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g\", \"None\")\n| where ResultType != \"None\" and isnotempty(ResultType)\n| where identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g != \"None\" and isnotempty(identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g)\n| where ResourceType == \"VAULTS\" and ResultType == \"Success\"\n| where OperationName in (OperationList) \n| summarize count() by identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g, OperationName\n| where count_ > AlertTriggerThreshold  \n| join (\nAzureDiagnostics\n| where TimeGenerated between (ago(starttime)..ago(endtime))\n| extend ResultType = columnifexists(\"ResultType\", \"NoResultType\")\n| extend requestUri_s = columnifexists(\"requestUri_s\", \"None\"), identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g = columnifexists(\"identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g\", \"None\")\n| extend id_s = columnifexists(\"id_s\", \"None\"), CallerIPAddress = columnifexists(\"CallerIPAddress\", \"None\"), clientInfo_s = columnifexists(\"clientInfo_s\", \"None\")\n| where ResultType != \"None\" and isnotempty(ResultType)\n| where identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g != \"None\" and isnotempty(identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g)\n| where id_s != \"None\" and isnotempty(id_s)\n| where CallerIPAddress != \"None\" and isnotempty(CallerIPAddress)\n| where clientInfo_s != \"None\" and isnotempty(clientInfo_s)\n| where requestUri_s != \"None\" and isnotempty(requestUri_s)\n| where OperationName in (OperationList)   \n) on identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g \n| project TimeGenerated, ResourceType, ResultType, Resource, OperationName, id_s, CallerIPAddress, identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g, requestUri_s, clientInfo_s\n| extend timestamp = TimeGenerated, IPCustomEntity = CallerIPAddress, AccountCustomEntity = identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g",
            "queryFrequency": "1h",
            "queryPeriod": "1d",
            "triggerOperator": "gt",
            "triggerThreshold": "0",
            "suppressionDuration": "6H",
            "suppressionEnabled": "false"
        },
        {
            "displayName": "Sensitive Azure Key Vault operations",
            "severity": "Low",
            "enabled": "true",
            "query": "\nlet starttime =1d;\nlet endtime = 1h;\nlet SensitiveOperationList = dynamic(\n[\"VaultDelete\", \"KeyDelete\", \"KeyDecrypt\", \"SecretDelete\", \"SecretPurge\", \"KeyPurge\", \"SecretBackup\", \"KeyBackup\"]);\nAzureDiagnostics\n| where TimeGenerated between (ago(starttime)..ago(endtime))\n| extend ResultType = columnifexists(\"ResultType\", \"NoResultType\")\n| extend requestUri_s = columnifexists(\"requestUri_s\", \"None\"), identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g = columnifexists(\"identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g\", \"None\")\n| extend id_s = columnifexists(\"id_s\", \"None\"), CallerIPAddress = columnifexists(\"CallerIPAddress\", \"None\"), clientInfo_s = columnifexists(\"clientInfo_s\", \"None\")\n| where ResultType != \"None\" and isnotempty(ResultType)\n| where identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g != \"None\" and isnotempty(identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g)\n| where id_s != \"None\" and isnotempty(id_s)\n| where CallerIPAddress != \"None\" and isnotempty(CallerIPAddress)\n| where clientInfo_s != \"None\" and isnotempty(clientInfo_s)\n| where requestUri_s != \"None\" and isnotempty(requestUri_s)\n| where ResourceType == \"VAULTS\" and ResultType == \"Success\" \n| where OperationName in (SensitiveOperationList)  \n| project TimeGenerated, ResourceType, ResultType, Resource, OperationName, id_s, CallerIPAddress, identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g, requestUri_s, clientInfo_s\n| extend timestamp = TimeGenerated, IPCustomEntity = CallerIPAddress, AccountCustomEntity = identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g",
            "queryFrequency": "1h",
            "queryPeriod": "1d",
            "triggerOperator": "gt",
            "triggerThreshold": "0",
            "suppressionDuration": "6H",
            "suppressionEnabled": "false"
        },
        {
            "displayName": "Azure Key Vault access TimeSeries anomaly",
            "severity": "Low",
            "enabled": "true",
            "query": "\nlet starttime = 14d;\nlet timeframe = 1h;\nlet scorethreshold = 1.5;\nlet OperationList = dynamic(\n[\"SecretGet\", \"KeyGet\", \"VaultGet\"]);\nlet TimeSeriesData = AzureDiagnostics\n| where TimeGenerated between (startofday(ago(starttime))..startofday(now()))\n| extend ResultType = columnifexists(\"ResultType\", \"None\"), CallerIPAddress = columnifexists(\"CallerIPAddress\", \"None\")\n| where ResultType != \"None\" and isnotempty(ResultType)\n| where CallerIPAddress != \"None\" and isnotempty(CallerIPAddress)\n| where ResourceType == \"VAULTS\" and ResultType == \"Success\"\n| where OperationName in (OperationList) \n| project TimeGenerated, OperationName, Resource, CallerIPAddress \n| make-series HourlyCount=count() on TimeGenerated from startofday(ago(starttime)) to startofday(now()) step timeframe by Resource;\n//Filter anomolies against TimeSeriesData\nlet TimeSeriesAlerts = TimeSeriesData\n| extend (anomalies, score, baseline) = series_decompose_anomalies(HourlyCount, scorethreshold, -1, 'linefit')\n| mv-expand HourlyCount to typeof(double), TimeGenerated to typeof(datetime), anomalies to typeof(double),score to typeof(double), baseline to typeof(long)\n| where anomalies > 0 | extend AnomalyHour = TimeGenerated\n| project Resource, AnomalyHour, TimeGenerated, HourlyCount, baseline, anomalies, score;\n// Join against base logs to retrive records associated with the hour of anomoly\nTimeSeriesAlerts\n| join (\nAzureDiagnostics\n| where TimeGenerated between (startofday(ago(starttime))..startofday(now()))\n| extend ResultType = columnifexists(\"ResultType\", \"NoResultType\")\n| extend requestUri_s = columnifexists(\"requestUri_s\", \"None\"), identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g = columnifexists(\"identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g\", \"None\")\n| extend id_s = columnifexists(\"id_s\", \"None\"), CallerIPAddress = columnifexists(\"CallerIPAddress\", \"None\"), clientInfo_s = columnifexists(\"clientInfo_s\", \"None\")\n| where ResultType != \"None\" and isnotempty(ResultType)\n| where identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g != \"None\" and isnotempty(identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g)\n| where id_s != \"None\" and isnotempty(id_s)\n| where CallerIPAddress != \"None\" and isnotempty(CallerIPAddress)\n| where clientInfo_s != \"None\" and isnotempty(clientInfo_s)\n| where requestUri_s != \"None\" and isnotempty(requestUri_s)\n| where ResourceType == \"VAULTS\" and ResultType == \"Success\"\n| where OperationName in (OperationList)  \n| summarize PerOperationCount=count() by bin(TimeGenerated,1h), Resource, OperationName, id_s, CallerIPAddress, identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g, requestUri_s, clientInfo_s     \n) on Resource, TimeGenerated \n| project AnomalyHour, Resource, CallerIPAddress, HourlyCount, baseline, anomalies, score, OperationName, id_s, identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g, requestUri_s, clientInfo_s, PerOperationCount\n| extend timestamp = AnomalyHour, IPCustomEntity = CallerIPAddress, AccountCustomEntity = identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g",
            "queryFrequency": "1h",
            "queryPeriod": "14d",
            "triggerOperator": "gt",
            "triggerThreshold": "0",
            "suppressionDuration": "6H",
            "suppressionEnabled": "false"
        }
    ]
}